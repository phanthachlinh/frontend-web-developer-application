{"ast":null,"code":"import _toConsumableArray from \"/Users/jakux/Documents/GitHub/frontend-web-developer-application/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/toConsumableArray\";\nimport { ADD_TO_CART, REMOVE_FROM_CART, UPDATE_CART } from '../actions/consts';\nexport default function () {\n  var state = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : [];\n  var action = arguments.length > 1 ? arguments[1] : undefined;\n\n  switch (action.type) {\n    case ADD_TO_CART:\n      var existingItem = state.find(function (item) {\n        return item.id == action.payload.id;\n      });\n\n      if (typeof existingItem === 'undefined') {\n        console.log(action.payload);\n        return _toConsumableArray(state).concat([action.payload]);\n      } else {\n        state[state.indexOf(existingItem)].quantity = action.payload.quantity;\n        return _toConsumableArray(state);\n      }\n\n    case REMOVE_FROM_CART:\n      var removeItem = state.find(function (item) {\n        return item.id == action.payload;\n      });\n      state.splice(state.indexOf(removeItem), 1);\n      console.log(state);\n      return _toConsumableArray(state);\n\n    case UPDATE_CART:\n      var item = state.find(function (item) {\n        return item.id == action.payload.id;\n      });\n      console.log(item);\n      var indexOfItem = state.indexOf(item);\n      state[indexOfItem].quantity = action.payload.quantity;\n      return _toConsumableArray(state);\n\n    default:\n      return state;\n  }\n}","map":{"version":3,"sources":["/Users/jakux/Documents/GitHub/frontend-web-developer-application/src/reducers/cart.js"],"names":["ADD_TO_CART","REMOVE_FROM_CART","UPDATE_CART","state","action","type","existingItem","find","item","id","payload","console","log","indexOf","quantity","removeItem","splice","indexOfItem"],"mappings":";AAAA,SAAQA,WAAR,EACEC,gBADF,EAEEC,WAFF,QAGM,mBAHN;AAKA,eAAe,YAAyB;AAAA,MAAhBC,KAAgB,uEAAV,EAAU;AAAA,MAAPC,MAAO;;AACtC,UAAQA,MAAM,CAACC,IAAf;AACE,SAAKL,WAAL;AACE,UAAIM,YAAY,GAAGH,KAAK,CAACI,IAAN,CAAW,UAACC,IAAD,EAAQ;AACpC,eAAOA,IAAI,CAACC,EAAL,IAAWL,MAAM,CAACM,OAAP,CAAeD,EAAjC;AACD,OAFkB,CAAnB;;AAGA,UAAG,OAAOH,YAAP,KAAwB,WAA3B,EAAuC;AACnCK,QAAAA,OAAO,CAACC,GAAR,CAAYR,MAAM,CAACM,OAAnB;AACA,kCAAWP,KAAX,UAAiBC,MAAM,CAACM,OAAxB;AACH,OAHD,MAGK;AACHP,QAAAA,KAAK,CAACA,KAAK,CAACU,OAAN,CAAcP,YAAd,CAAD,CAAL,CAAmCQ,QAAnC,GAA8CV,MAAM,CAACM,OAAP,CAAeI,QAA7D;AACA,kCAAWX,KAAX;AACD;;AACD,SAAKF,gBAAL;AACE,UAAIc,UAAU,GAAGZ,KAAK,CAACI,IAAN,CAAW,UAACC,IAAD,EAAQ;AAClC,eAAOA,IAAI,CAACC,EAAL,IAAWL,MAAM,CAACM,OAAzB;AACD,OAFgB,CAAjB;AAGAP,MAAAA,KAAK,CAACa,MAAN,CAAab,KAAK,CAACU,OAAN,CAAcE,UAAd,CAAb,EAAuC,CAAvC;AACAJ,MAAAA,OAAO,CAACC,GAAR,CAAYT,KAAZ;AACA,gCAAWA,KAAX;;AACA,SAAKD,WAAL;AACE,UAAIM,IAAI,GAAGL,KAAK,CAACI,IAAN,CAAW,UAAAC,IAAI,EAAE;AAC1B,eAAOA,IAAI,CAACC,EAAL,IAAWL,MAAM,CAACM,OAAP,CAAeD,EAAjC;AACD,OAFU,CAAX;AAGAE,MAAAA,OAAO,CAACC,GAAR,CAAYJ,IAAZ;AACA,UAAIS,WAAW,GAAGd,KAAK,CAACU,OAAN,CAAcL,IAAd,CAAlB;AACAL,MAAAA,KAAK,CAACc,WAAD,CAAL,CAAmBH,QAAnB,GAA8BV,MAAM,CAACM,OAAP,CAAeI,QAA7C;AACA,gCAAWX,KAAX;;AACN;AACE,aAAOA,KAAP;AA5BJ;AA8BD","sourcesContent":["import {ADD_TO_CART,\n  REMOVE_FROM_CART,\n  UPDATE_CART\n}from '../actions/consts';\n\nexport default function(state=[],action){\n  switch (action.type) {\n    case ADD_TO_CART:\n      let existingItem = state.find((item)=>{\n        return item.id == action.payload.id\n      });\n      if(typeof existingItem === 'undefined'){\n          console.log(action.payload)\n          return [...state,action.payload];\n      }else{\n        state[state.indexOf(existingItem)].quantity = action.payload.quantity;\n        return [...state]\n      }\n      case REMOVE_FROM_CART:\n        let removeItem = state.find((item)=>{\n          return item.id == action.payload\n        })\n        state.splice(state.indexOf(removeItem),1)\n        console.log(state)\n        return [...state]\n        case UPDATE_CART:\n          let item = state.find(item=>{\n            return item.id == action.payload.id\n          });\n          console.log(item);\n          let indexOfItem = state.indexOf(item);\n          state[indexOfItem].quantity = action.payload.quantity\n          return [...state]\n    default:\n      return state\n  }\n}\n"]},"metadata":{},"sourceType":"module"}