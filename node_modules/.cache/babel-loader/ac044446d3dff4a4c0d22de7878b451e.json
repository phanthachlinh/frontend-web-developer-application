{"ast":null,"code":"var _jsxFileName = \"/Users/jakux/Documents/GitHub/frontend-web-developer-application/src/index.js\";\nimport React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport * as serviceWorker from './serviceWorker';\nimport { Provider } from 'react-redux';\nimport { createStore, applyMiddleware } from 'redux';\nimport rootReducer from './reducers/root_reducer.js';\nimport Promise from 'redux-promise';\nimport Header from './components/menu';\nimport Beer from './pages/beer';\nimport Cart from './pages/cart';\nimport { BrowserRouter as Router, Switch, Route } from 'react-router-dom';\nimport { persistStore, persistReducer } from 'redux-persist';\nimport { PersistGate } from 'redux-persist/integration/react';\nimport storage from 'redux-persist/lib/storage'; // defaults to localStorage for web and AsyncStorage for react-native\n\nvar persistConfig = {\n  key: 'root',\n  storage: storage\n};\nvar persistedReducer = persistReducer(persistConfig, rootReducer);\nvar store = createStore(persistedReducer, {}, applyMiddleware(Promise));\nvar persistor = persistStore(store);\nReactDOM.render(React.createElement(Provider, {\n  store: store,\n  __source: {\n    fileName: _jsxFileName,\n    lineNumber: 26\n  },\n  __self: this\n}, React.createElement(PersistGate, {\n  loading: null,\n  persistor: persistor,\n  __source: {\n    fileName: _jsxFileName,\n    lineNumber: 27\n  },\n  __self: this\n}, React.createElement(Router, {\n  __source: {\n    fileName: _jsxFileName,\n    lineNumber: 29\n  },\n  __self: this\n}, React.createElement(React.Fragment, null, React.createElement(Header, {\n  __source: {\n    fileName: _jsxFileName,\n    lineNumber: 31\n  },\n  __self: this\n}), React.createElement(Switch, {\n  __source: {\n    fileName: _jsxFileName,\n    lineNumber: 32\n  },\n  __self: this\n}, React.createElement(Route, {\n  path: \"/cart\",\n  component: Cart,\n  __source: {\n    fileName: _jsxFileName,\n    lineNumber: 33\n  },\n  __self: this\n}), React.createElement(Route, {\n  path: \"/beer/:id\",\n  component: Beer,\n  __source: {\n    fileName: _jsxFileName,\n    lineNumber: 34\n  },\n  __self: this\n}), React.createElement(Route, {\n  exact: true,\n  path: \"/\",\n  component: App,\n  __source: {\n    fileName: _jsxFileName,\n    lineNumber: 35\n  },\n  __self: this\n})))))), document.getElementById('root')); // If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: http://bit.ly/CRA-PWA\n\nserviceWorker.unregister();","map":{"version":3,"sources":["/Users/jakux/Documents/GitHub/frontend-web-developer-application/src/index.js"],"names":["React","ReactDOM","App","serviceWorker","Provider","createStore","applyMiddleware","rootReducer","Promise","Header","Beer","Cart","BrowserRouter","Router","Switch","Route","persistStore","persistReducer","PersistGate","storage","persistConfig","key","persistedReducer","store","persistor","render","document","getElementById","unregister"],"mappings":";AAAA,OAAOA,KAAP,MAAkB,OAAlB;AACA,OAAOC,QAAP,MAAqB,WAArB;AACA,OAAO,aAAP;AACA,OAAOC,GAAP,MAAgB,OAAhB;AACA,OAAO,KAAKC,aAAZ,MAA+B,iBAA/B;AACA,SAAQC,QAAR,QAAuB,aAAvB;AACA,SAAQC,WAAR,EAAqBC,eAArB,QAA2C,OAA3C;AACA,OAAOC,WAAP,MAAwB,4BAAxB;AACA,OAAOC,OAAP,MAAoB,eAApB;AACA,OAAOC,MAAP,MAAmB,mBAAnB;AACA,OAAOC,IAAP,MAAiB,cAAjB;AACA,OAAOC,IAAP,MAAiB,cAAjB;AACA,SAAQC,aAAa,IAAIC,MAAzB,EAAgCC,MAAhC,EAAuCC,KAAvC,QAAmD,kBAAnD;AACA,SAASC,YAAT,EAAuBC,cAAvB,QAA6C,eAA7C;AACA,SAASC,WAAT,QAA4B,iCAA5B;AAEA,OAAOC,OAAP,MAAoB,2BAApB,C,CAAgD;;AAChD,IAAMC,aAAa,GAAG;AACpBC,EAAAA,GAAG,EAAE,MADe;AAEpBF,EAAAA,OAAO,EAAPA;AAFoB,CAAtB;AAIA,IAAMG,gBAAgB,GAAGL,cAAc,CAACG,aAAD,EAAgBb,WAAhB,CAAvC;AACA,IAAMgB,KAAK,GAAGlB,WAAW,CAACiB,gBAAD,EAAkB,EAAlB,EAAqBhB,eAAe,CAACE,OAAD,CAApC,CAAzB;AACA,IAAMgB,SAAS,GAAGR,YAAY,CAACO,KAAD,CAA9B;AACAtB,QAAQ,CAACwB,MAAT,CACE,oBAAC,QAAD;AAAU,EAAA,KAAK,EAAEF,KAAjB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,GACE,oBAAC,WAAD;AAAa,EAAA,OAAO,EAAE,IAAtB;AAA4B,EAAA,SAAS,EAAEC,SAAvC;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,GAEA,oBAAC,MAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,GACA,0CACA,oBAAC,MAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,EADA,EAEA,oBAAC,MAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,GACE,oBAAC,KAAD;AAAO,EAAA,IAAI,EAAC,OAAZ;AAAoB,EAAA,SAAS,EAAEb,IAA/B;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,EADF,EAEE,oBAAC,KAAD;AAAO,EAAA,IAAI,EAAC,WAAZ;AAAwB,EAAA,SAAS,EAAED,IAAnC;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,EAFF,EAGE,oBAAC,KAAD;AAAO,EAAA,KAAK,MAAZ;AAAa,EAAA,IAAI,EAAC,GAAlB;AAAsB,EAAA,SAAS,EAAER,GAAjC;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,EAHF,CAFA,CADA,CAFA,CADF,CADF,EAeewB,QAAQ,CAACC,cAAT,CAAwB,MAAxB,CAff,E,CAiBA;AACA;AACA;;AACAxB,aAAa,CAACyB,UAAd","sourcesContent":["import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport * as serviceWorker from './serviceWorker';\nimport {Provider} from 'react-redux';\nimport {createStore, applyMiddleware} from 'redux';\nimport rootReducer from './reducers/root_reducer.js';\nimport Promise from 'redux-promise';\nimport Header from './components/menu';\nimport Beer from './pages/beer';\nimport Cart from './pages/cart';\nimport {BrowserRouter as Router,Switch,Route} from 'react-router-dom';\nimport { persistStore, persistReducer } from 'redux-persist';\nimport { PersistGate } from 'redux-persist/integration/react'\n\nimport storage from 'redux-persist/lib/storage' // defaults to localStorage for web and AsyncStorage for react-native\nconst persistConfig = {\n  key: 'root',\n  storage,\n};\nconst persistedReducer = persistReducer(persistConfig, rootReducer)\nconst store = createStore(persistedReducer,{},applyMiddleware(Promise));\nconst persistor = persistStore(store);\nReactDOM.render(\n  <Provider store={store}>\n    <PersistGate loading={null} persistor={persistor}>\n\n    <Router>\n    <>\n    <Header />\n    <Switch>\n      <Route path='/cart' component={Cart} />\n      <Route path='/beer/:id' component={Beer} />\n      <Route exact path='/' component={App} />\n    </Switch>\n    </>\n  </Router>\n  </PersistGate>\n  </Provider>, document.getElementById('root'));\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: http://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"]},"metadata":{},"sourceType":"module"}